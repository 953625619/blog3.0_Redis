<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lh.bean.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_create_date" jdbcType="TIMESTAMP" property="commentCreateDate" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="comment_STATUS" jdbcType="INTEGER" property="commentStatus" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lh.bean.CommentWithBLOBs">
    <result column="comment_html_text" jdbcType="LONGVARCHAR" property="commentHtmlText" />
    <result column="comment_md_text" jdbcType="LONGVARCHAR" property="commentMdText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, comment_create_date, comment_ip, comment_STATUS, pid, uid, aid
  </sql>
  <sql id="Blob_Column_List">
    comment_html_text, comment_md_text
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lh.bean.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lh.bean.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comment_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment_
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lh.bean.CommentWithBLOBs" useGeneratedKeys="true">
    insert into comment_ (comment_create_date, comment_ip, comment_STATUS, 
      pid, uid, aid, comment_html_text, 
      comment_md_text)
    values (#{commentCreateDate,jdbcType=TIMESTAMP}, #{commentIp,jdbcType=VARCHAR}, #{commentStatus,jdbcType=INTEGER}, 
      #{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{commentHtmlText,jdbcType=LONGVARCHAR}, 
      #{commentMdText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lh.bean.CommentWithBLOBs" useGeneratedKeys="true">
    insert into comment_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentCreateDate != null">
        comment_create_date,
      </if>
      <if test="commentIp != null">
        comment_ip,
      </if>
      <if test="commentStatus != null">
        comment_STATUS,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="commentHtmlText != null">
        comment_html_text,
      </if>
      <if test="commentMdText != null">
        comment_md_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentCreateDate != null">
        #{commentCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentIp != null">
        #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="commentHtmlText != null">
        #{commentHtmlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentMdText != null">
        #{commentMdText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.bean.CommentWithBLOBs">
    update comment_
    <set>
      <if test="commentCreateDate != null">
        comment_create_date = #{commentCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentIp != null">
        comment_ip = #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        comment_STATUS = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="commentHtmlText != null">
        comment_html_text = #{commentHtmlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentMdText != null">
        comment_md_text = #{commentMdText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lh.bean.CommentWithBLOBs">
    update comment_
    set comment_create_date = #{commentCreateDate,jdbcType=TIMESTAMP},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      comment_STATUS = #{commentStatus,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      aid = #{aid,jdbcType=INTEGER},
      comment_html_text = #{commentHtmlText,jdbcType=LONGVARCHAR},
      comment_md_text = #{commentMdText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.bean.Comment">
    update comment_
    set comment_create_date = #{commentCreateDate,jdbcType=TIMESTAMP},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      comment_STATUS = #{commentStatus,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      aid = #{aid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>